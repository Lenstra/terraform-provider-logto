name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Setup Vault Client Authentication
        run: |
          echo "${{ secrets.VAULT_CLIENT_CERT }}" | base64 --decode > client.crt
          echo "${{ secrets.VAULT_CLIENT_KEY }}" | base64 --decode > client.key
          chmod 600 client.key

      - name: Retrieve GPG key from Vault
        run: |
          GPG_KEY=$(curl --cert client.crt --key client.key \
            -s https://vault.lenstra.co/v1/secret/data/gpg | jq -r .data.data.private_key)

          echo "$GPG_KEY" | base64 --decode > private.key
          gpg --import private.key
          rm -f private.key

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6.1.0
        id: import_gpg
        with:
          gpg_private_key: ${{ env.GPG_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6.0.0
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Clean up credentials
        if: always()
        run: rm -f client.crt client.key
